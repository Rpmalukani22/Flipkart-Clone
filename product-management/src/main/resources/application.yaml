scheme: http
origins: http://localhost:3000,https://localhost:3000,http://localhost,https://localhost
permit-all: /public/**
keycloak-port: 8080
keycloak-issuer: http://keycloak:8080/auth/realms/flipkart-clone

spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/auth/realms/flipkart-clone/protocol/openid-connect/certs
          issuer-uri: https://localhost/auth/realms/flipkart-clone
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: product-management
            client-secret: KX7FKFPU5r4ao9zemeQLTsJkF8lBw0Wy
            authorization-grant-type: password
            scope: openid
        provider:
          keycloak:
            authorization-uri: http://keycloak:8080/auth/realms/flipkart-clone/protocol/openid-connect/auth
            token-uri: http://keycloak:8080/auth/realms/flipkart-clone/protocol/openid-connect/token
            user-info-uri: http://keycloak:8080/auth/realms/flipkart-clone/protocol/openid-connect/userinfo
            issuer-uri: http://keycloak:8080/auth/realms/flipkart-clone
            user-name-attribute: preferred_username


# com:
#   c4-soft:
#     springaddons:
#       security:
#         cors:
#           - path: /api/product-management/**
#             allowed-origins: ${origins}
#         issuers:
#           - location: http://keycloak:8080/auth/realms/flipkart-clone
#             username-claim: preferred_username
#             authorities:
#               - path: $.realm_access.roles
#               - path: $.resource_access.*.roles
#         permit-all:
#           - "/v3/api-docs/**"

# token-endpoints:
#   realms:
#     flipkart-clone:
#       client-id: ${KC_PRODUCT_MGMT_RESOURCE:product-management}
#       client-secret: ${KC_PRODUCT_MGMT_SECRET:KX7FKFPU5r4ao9zemeQLTsJkF8lBw0Wy}

logging:
  level:
    org.springframework.security: trace
