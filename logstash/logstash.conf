input{ 
 mongodb{
   uri => "mongodb://root:example@mongodb:27017/products?authSource=admin"
   placeholder_db_dir => "/logstash-mongodb/"
   placeholder_db_name => "logstash_sqlite.db"
   collection => "product"
}
}
filter {
  # mutate { gsub => [ "log_entry", "=>", ": " ] }
  # mutate { gsub => [ "log_entry", "BSON::ObjectId\('([0-9a-z]+)'\)", '"\1"' ]}
  # json { source => "log_entry" remove_field => [ "log_entry" ] }
  mutate {
    copy => { "_id" => "[@metadata][_id]"}
    remove_field => [ "_id","_class","@version","log_entry","host_id","logdate","host","@timestamp"]
    # convert => ["productSpecifications_details_Style code","string"]
    # convert => ["productSpecifications_details_Style Code","string"]
    # convert => ["productSpecifications_details_Sales Package","string"]
    # convert => ["productSpecifications_details_Pack of","string"]
    # convert => ["productSpecifications_details_UV Protection","string"]
    # convert => ["productSpecifications_details_Compartment Type","string"]
  }
  mutate {
      add_field => {
        "price" => "%{[discountedPrice]}"
        "f_assured" => "%{[productSpecifications][f_assured]}"
      }
    }
  if [price] == "0" {
    mutate {
      replace => {
        "price" => "%{[retailPrice]}"
      }
    }
  }
  mutate {
  convert => {
        "price" => "float"
  }
  }
  prune {
    whitelist_names => [ "name", "slug","productUrl","description","brand","retailPrice","discountedPrice","price","productSpecifications_rating","productSpecifications_discounted","productSpecifications_f_assured"]
  }
}
output{
    opensearch {
        hosts => ["https://opensearch-node1:9200"]
        index => "logstash-products"
        user => "admin"
        password => "admin"
        ssl => true
        ssl_certificate_verification => false
        document_id => "%{[@metadata][_id]}"
        template => "/indices/products.json"
        template_name => "logstash-products"
        template_overwrite => true 
        manage_template => true
        action => "update"
        doc_as_upsert => true
      }
 }
