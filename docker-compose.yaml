version: "3"

###########################################################################
# Prerequisites

#  SonarQube :-
#    sysctl -w vm.max_map_count=524288
#    sysctl -w fs.file-max=131072
#    ulimit -n 131072
#    ulimit -u 8192

# Reference: https://hub.docker.com/_/SonarQube
############################################################################

services:
  sonarqube:
    image: sonarqube:lts-community
    depends_on:
      - postgresdb
    environment:
      SONAR_JDBC_URL: ${SONARQUBE_JDBC_URL:-jdbc:postgresql://postgresdb:5432/sonar}
      SONAR_JDBC_USERNAME: ${SONARQUBE_USER:-sonar}
      SONAR_JDBC_PASSWORD: ${SONARQUBE_PASSWORD:-sonar}
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    ports:
      - "9000:9000"

  postgresdb:
    image: postgres:15.2-alpine3.17
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-sonar}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-sonar}
    volumes:
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
  mongodb:
    image: mongo:5.0.15
    ports:
      - 27017:27017
    volumes:
      - ./docker-services/mongodb/data/db:/data/db:rw
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD:-example}
  mongo-express:
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PASSWORD:-example}
      ME_CONFIG_MONGODB_URL: ${MONGODB_CONNECTION_URL:-mongodb://root:example@mongodb:27017/}
  s3server:
    build: ./docker-services/cloudserver
    volumes:
      - ./docker-services/cloudserver/data:/usr/src/app/localData
      - ./docker-services/cloudserver/metadata:/usr/src/app/localMetadata
    environment:
      S3BACKEND: file
      ENDPOINT: http://localhost
      REMOTE_MANAGEMENT_DISABLE: 1 
      SCALITY_ACCESS_KEY_ID: ${S3_SERVER_ACCESS_KEY_ID:-accessKey1}
      SCALITY_SECRET_ACCESS_KEY: ${S3_SERVER_SECRET_ACCESS_KEY:-verySecretKey1}
    ports:
      - "8000:8000"
  s3manager:
    container_name: s3manger
    hostname: s3manager
    image: mastertinner/s3manager
    ports:
      - 8001:8081
    environment:
      PORT: 8081
      ENDPOINT: ${S3_SERVER_ENDPOINT:-s3server:8000}
      ACCESS_KEY_ID: ${S3_SERVER_ACCESS_KEY_ID:-accessKey1}
      SECRET_ACCESS_KEY: ${S3_SERVER_SECRET_ACCESS_KEY:-verySecretKey1}
      USE_SSL: false
    depends_on:
      - s3server
volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgresql:
  postgresql_data:
